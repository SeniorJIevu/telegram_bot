variables:
  COMPANY_NAME: shawa
  APPNAME_SHORT: blog
  DOCKER_HOST: tcp://docker:2375
  DOCKER_TLS_CERTDIR: ''


stages:
  - build
  - deploy

.docker_build: &docker_build
  stage: build
  tags:
    - ava_runner
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - echo $PYTHON_BASE_IMAGE
    - ls -la
    - >
      DOCKER_BUILDKIT=1 docker build
      -f dockerfile.ci --progress=plain
      --build-arg PYTHON_BASE_IMAGE=$PYTHON_BASE_IMAGE
      --build-arg CI_VERSION=${CI_COMMIT_BRANCH}-${CI_COMMIT_SHORT_SHA}
      --build-arg CI_COMMIT_TIMESTAMP=$CI_COMMIT_TIMESTAMP
      --tag $CI_REGISTRY_IMAGE:${BUILD_VERSION}
      --tag $CI_REGISTRY_IMAGE:${BUILD_LATEST_VERSION}
      . --no-cache
    - docker push $CI_REGISTRY_IMAGE --all-tags

.docker_deploy: &docker_deploy
  stage: deploy
  tags:
    - aiogram_runner
  script:
  variables:
    DEPLOY_VERSION: ${BUILD_VERSION}
    SERVICE_DIR: "/opt/docker/aiogram"
  script:
    - |
      cat > ${SERVICE_DIR}/.env << EOF
      IMAGE_NAME: $CI_REGISTRY_IMAGE
      IMAGE_VERSION=${DEPLOY_VERSION}
      EOF
    - sudo docker-compose -f ${SERVICE_DIR}/docker-compose.yml up -d --remove-orphans
    - echo "deploy done"

docker_latest:
  extends: .docker_build
  variables:
    BUILD_VERSION: "latest-${CI_COMMIT_SHORT_SHA}"
    BUILD_LATEST_VERSION: "latest" 
  only:
    - master

docker_release:
  extends: .docker_build
  variables:
    BUILD_VERSION: "${CI_COMMIT_TAG}"
    BUILD_LATEST_VERSION: "release-latest" 
  only:
    - tags

deploy_latest:
  extends: .docker_deploy
  variables:
    BUILD_VERSION: "latest-${CI_COMMIT_SHORT_SHA}"
  only:
    - master

deploy_release:
  extends: .docker_build
  variables:
    BUILD_VERSION: "${CI_COMMIT_TAG}"
  only:
    - tags